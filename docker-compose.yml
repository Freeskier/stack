version: '3.6'
services:
  # certs:
  #   container_name: certs
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.7
  #   command: bash /usr/share/elasticsearch/config/setup.sh
  #   user: '0'
  #   volumes:
  #     - ./elasticsearch/secrets:/secrets/
  #     - ./elasticsearch/config/setup.sh:/usr/share/elasticsearch/config/setup.sh
  #     - ./elasticsearch/config/instances.yml:/usr/share/elasticsearch/config/instances.yml:ro
  #   environment:
  #     ELASTIC_PASSWORD: ${ELASTICSEARCH_PASS}
  #   networks:
  #     - elk
  elasticsearch:
    image: elasticsearch:7.17.7
    container_name: elasticsearch
    hostname: elasticsearch
    stdin_open: true
    tty: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/secrets/elasticsearch.keystore:/usr/share/elasticsearch/config/elasticsearch.keystore:ro
      - ./elasticsearch/secrets:/usr/share/elasticsearch/config/certs
    ports:
      - ${ELASTICSEARCH_PORT}:9200
    networks:
      - elk
    environment:
      ES_JAVA_OPTS: '-Xmx256m -Xms256m'
      discovery.type: single-node
    # depends_on:
    #   - certs

  logstash:
    image: logstash:7.17.7
    container_name: logstash
    hostname: logstash
    privileged: true
    stdin_open: true
    tty: true
    restart: always
    #command: chmod 777 /usr/share/kibana/config/certs/certificates/logstash/logstash.pkcs8.key
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elasticsearch/secrets:/usr/share/logstash/config/certs:rw
    depends_on:
      - elasticsearch
      #- certs
    ports:
      - ${LOGSTASH_PORT}:5088
    environment:
      LS_JAVA_OPTS: '-Xmx256m -Xms256m'
    networks:
      - elk

  kibana:
    image: kibana:7.17.7
    container_name: kibana
    hostname: kibana
    stdin_open: true
    tty: true
    restart: always
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./elasticsearch/secrets:/usr/share/kibana/config/certs
    ports:
      - ${KIBANA_PORT}:5601
    depends_on:
      - elasticsearch
    networks:
      - elk

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.7
    container_name: filebeat
    hostname: filebeat
    stdin_open: true
    tty: true
    command: filebeat -e -strict.perms=false
    restart: always
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./zeek/pcap:/pcap:rw
      - ./suricata/logs:/logs/suricata:rw
      - ./arkime/logs:/logs/arkime:rw
      - ./elasticsearch/secrets:/usr/share/filebeat/config/certs
    networks:
      - elk
    links:
      - logstash:logstash
    depends_on:
      - logstash

  zeek:
    container_name: zeek
    hostname: zeek
    stdin_open: true
    tty: true
    depends_on:
      - filebeat
    image: blacktop/zeek:elastic
    volumes:
      - ./zeek/pcap:/pcap
      - ./zeek/config/local.zeek:/usr/local/zeek/share/zeek/site/local.zeek
    cap_add:
      - NET_ADMIN
    network_mode: 'host'
    command: -i af_packet::${HOST_INTERFACE} local

  suricata:
    container_name: suricata
    hostname: suricata
    stdin_open: true
    tty: true
    image: jasonish/suricata:latest
    volumes:
      - ./suricata/logs/suricata:/var/log/suricata
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    network_mode: 'host'
    command: -i ${HOST_INTERFACE}

  arkime:
    container_name: arkime
    hostname: arkime
    command: 'sysctl -w vm.max_map_count=262144'
    stdin_open: true
    ports:
      - 8005:8005
    tty: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    privileged: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    image: mammo0/docker-arkime:latest
    volumes:
      - ./arkime/config:/data/config
      - ./arkime/pcap:/data/pcap
      - ./arkime/logs:/data/logs
      - ./elasticsearch/secrets:/usr/share/arkime/config/certs
      - ./arkime/startarkime.sh:/data/startarkime.sh
      #- ./arkime/db.pl:/opt/arkime/db/db.pl:rw
    networks:
      - elk
    deploy:
      resources:
        reservations:
          memory: 800M
    environment:
      - CAPTURE=on
      - OS_HOST=elasticsearch
      - VIEWER=on
      - ARKIME_INTERFACE=${HOST_INTERFACE}
      - ES_HOST=elasticsearch
      - ES_PORT=${ELASTICSEARCH_PORT}
    depends_on:
      - elasticsearch
networks:
  elk:
